name: Docker Image CI

on:
  push:
    branches: [ "main", "git-actions" ]

jobs:

  build:

    runs-on: ubuntu-latest

#    container: gradle:jdk19

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:15.2
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        # Docker Hub image
        image: redis/redis-stack:latest
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      zipkin:
        # Docker Hub image
        image: openzipkin/zipkin

    steps:
    - name: Generate tag from timestamp
      id: image-tag
      run: |
        echo $(date +'%Y%m%d%H%M%S') >> tag.txt
        echo "tag=$(cat tag.txt)" >> $GITHUB_ENV


    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag blueinit/auth-svc:${{ env.tag }} 
      
    - name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}     
    
    - name: Push Docker image
      run: docker push blueinit/auth-svc:${{ env.tag }}


        
